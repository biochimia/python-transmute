# -*- coding: utf-8 -*-

from setuptools import Command, find_packages, setup
from setuptools.command.egg_info import egg_info

import datetime
import os.path
import subprocess


try: execfile(VERSION_FILE)
except: __version__ = 'unknown'

README_md = 'README.md'
README_rst = 'README.rst'
VERSION_FILE = 'transmute/_version.py'


def read_file(filename):
    try:
        with open(filename) as f:
            return f.read()
    except:
        pass

def write_file(filename, content):
    with open(filename, 'w') as f:
        return f.write(content)

class ResetVersion(Command):

    description = "reset package version with version number from git"
    user_options = []

    def initialize_options(self):
        try:
            wd = os.path.dirname(__file__) or None
            revision = subprocess.check_output(
                    [ 'git', 'describe', '--always', '--dirty=-patched' ], cwd=wd)
            self.distribution.metadata.version = revision.rstrip()
        except:
            pass

    def finalize_options(self):
        pass

    def run(self):
        current_version = self.distribution.metadata.version

        if current_version != __version__:
            version_file_content = '\n'.join([
                "# File generated by %s on %s" % (__file__, datetime.date.today()),
                "__version__ = '%s'" % current_version,
                ""  # End of file line-break
            ])
            write_file(VERSION_FILE, version_file_content)


class EggInfo(egg_info):
    def initialize_options(self):
        egg_info.initialize_options(self)

        # Reset version number before egg_info sets its internal egg_version in
        # finalize_options.
        self.run_command('reset_version')

        # Generate README.rst
        md = read_file(README_md)
        rst = None
        try:
            # Requires pandoc, the tool, and pypandoc, the python module
            import pypandoc

            rst = pypandoc.convert(md, 'rst', format='md')
            write_file(README_rst, rst)
        except:
            pass

        self.distribution.metadata.long_description \
                = rst or read_file(README_rst) or md


project_metadata = {
    'name':         'transmute',
    'version':      __version__,
    'author':       'Jo√£o Abecasis',
    'author_email': 'joao@comoyo.com',
    'url':          'https://github.com/comoyo/python-transmute',
    'description':  'Automatically update Python Eggs on application startup.',
    'classifiers':  [
                        "Programming Language :: Python",
                        "License :: OSI Approved :: Apache Software License",
                        "Operating System :: OS Independent",
                        "Development Status :: 3 - Alpha",
                        "Intended Audience :: Developers",
                        "Topic :: Software Development :: Libraries :: Python Modules",
                        "Topic :: System :: Installation/Setup",
                        "Topic :: System :: Software Distribution",
                    ],
    'packages':     find_packages(exclude=[ 'tests*' ]),
    'cmdclass':     {
                        'egg_info': EggInfo,
                        'reset_version': ResetVersion,
                    },
}
setup(**project_metadata)
